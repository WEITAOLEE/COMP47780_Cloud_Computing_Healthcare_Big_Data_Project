{"ast":null,"code":"var _jsxFileName = \"/Users/weetomlee/Desktop/out/General Documentary/UCD Programme Material/Fourth Trimester/COMP47780_Cloud Computing_All Weeks in Autumn_10 Credits/The Project/COMP47780_Cloud_Computing_Healthcare_Big_Data_Project/front_end/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\nimport axios from 'axios';\n\n// A generic function to fetch data from a given endpoint\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchDataFromEndpoint = async endpoint => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return [];\n  }\n};\nconst ChartComponent = ({\n  data,\n  chartType,\n  label,\n  dataKey,\n  backgroundColor,\n  borderColor\n}) => {\n  const chartData = {\n    labels: data.map(item => item['Country/Region']),\n    datasets: [{\n      label,\n      data: data.map(item => item[dataKey]),\n      backgroundColor,\n      borderColor,\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        type: 'category'\n      },\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  switch (chartType) {\n    case 'bar':\n      return /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    case 'pie':\n      return /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    case 'line':\n      return /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    default:\n      return null;\n  }\n};\n_c = ChartComponent;\nconst App = () => {\n  _s();\n  const [countryData, setCountryData] = useState([]);\n  const [covidData, setCovidData] = useState([]);\n  const [groupedData, setGroupedData] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const countryResponse = await fetchDataFromEndpoint('http://localhost:3001/country-wise-latest');\n      setCountryData(countryResponse);\n      const covidResponse = await fetchDataFromEndpoint('http://localhost:3001/covid-19-clean-complete');\n      setCovidData(covidResponse);\n      const groupedResponse = await fetchDataFromEndpoint('http://localhost:3001/full-grouped');\n      setGroupedData(groupedResponse);\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"COVID-19 Data Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), countryData.length > 0 && /*#__PURE__*/_jsxDEV(ChartComponent, {\n      data: countryData,\n      chartType: \"bar\",\n      label: \"Confirmed Cases\",\n      dataKey: \"Confirmed\",\n      backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n      borderColor: \"rgba(255, 99, 132, 1)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WWLW+3QDVh0s1DPNo4YVyRvDU88=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChartComponent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Pie","Line","axios","jsxDEV","_jsxDEV","fetchDataFromEndpoint","endpoint","response","get","data","error","console","ChartComponent","chartType","label","dataKey","backgroundColor","borderColor","chartData","labels","map","item","datasets","borderWidth","options","responsive","scales","x","type","y","beginAtZero","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","countryData","setCountryData","covidData","setCovidData","groupedData","setGroupedData","fetchData","countryResponse","covidResponse","groupedResponse","className","children","length","_c2","$RefreshReg$"],"sources":["/Users/weetomlee/Desktop/out/General Documentary/UCD Programme Material/Fourth Trimester/COMP47780_Cloud Computing_All Weeks in Autumn_10 Credits/The Project/COMP47780_Cloud_Computing_Healthcare_Big_Data_Project/front_end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\nimport axios from 'axios';\n\n// A generic function to fetch data from a given endpoint\nconst fetchDataFromEndpoint = async (endpoint) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return [];\n  }\n};\n\nconst ChartComponent = ({ data, chartType, label, dataKey, backgroundColor, borderColor }) => {\n  const chartData = {\n    labels: data.map(item => item['Country/Region']),\n    datasets: [{\n      label,\n      data: data.map(item => item[dataKey]),\n      backgroundColor,\n      borderColor,\n      borderWidth: 1,\n    }],\n  };\n\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        type: 'category',\n      },\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n  switch (chartType) {\n    case 'bar':\n      return <Bar data={chartData} options={options} />;\n    case 'pie':\n      return <Pie data={chartData} options={options} />;\n    case 'line':\n      return <Line data={chartData} options={options} />;\n    default:\n      return null;\n  }\n};\n\nconst App = () => {\n  const [countryData, setCountryData] = useState([]);\n  const [covidData, setCovidData] = useState([]);\n  const [groupedData, setGroupedData] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const countryResponse = await fetchDataFromEndpoint('http://localhost:3001/country-wise-latest');\n      setCountryData(countryResponse);\n\n      const covidResponse = await fetchDataFromEndpoint('http://localhost:3001/covid-19-clean-complete');\n      setCovidData(covidResponse);\n\n      const groupedResponse = await fetchDataFromEndpoint('http://localhost:3001/full-grouped');\n      setGroupedData(groupedResponse);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>COVID-19 Data Visualization</h1>\n      {countryData.length > 0 && (\n        <ChartComponent\n          data={countryData}\n          chartType=\"bar\"\n          label=\"Confirmed Cases\"\n          dataKey=\"Confirmed\"\n          backgroundColor=\"rgba(255, 99, 132, 0.2)\"\n          borderColor=\"rgba(255, 99, 132, 1)\"\n        />\n      )}\n      {/* Repeat for other datasets with Pie and Line components */}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}