{"ast":null,"code":"var _jsxFileName = \"/Users/weetomlee/Desktop/out/General Documentary/UCD Programme Material/Fourth Trimester/COMP47780_Cloud Computing_All Weeks in Autumn_10 Credits/The Project/COMP47780_Cloud_Computing_Healthcare_Big_Data_Project/front_end/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction fetchDataFromEndpoint(endpoint) {\n  return fetch(endpoint).then(response => response.json());\n}\nfunction ChartComponent({\n  data,\n  chartType,\n  label,\n  dataKey,\n  backgroundColor,\n  borderColor\n}) {\n  const chartData = {\n    labels: data.map(item => item['Country/Region']),\n    datasets: [{\n      label: label,\n      data: data.map(item => item[dataKey]),\n      backgroundColor: backgroundColor,\n      borderColor: borderColor,\n      borderWidth: 1\n    }]\n  };\n  switch (chartType) {\n    case 'bar':\n      return /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    case 'pie':\n      return /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    case 'line':\n      return /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    default:\n      return null;\n  }\n}\n_c = ChartComponent;\nfunction App() {\n  _s();\n  const [countryData, setCountryData] = useState([]);\n  const [covidData, setCovidData] = useState([]);\n  const [groupedData, setGroupedData] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const countryData = await fetchDataFromEndpoint('/country-wise-latest');\n      setCountryData(countryData);\n      const covidData = await fetchDataFromEndpoint('/covid-19-clean-complete');\n      setCovidData(covidData);\n      const groupedData = await fetchDataFromEndpoint('/full-grouped');\n      setGroupedData(groupedData);\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"COVID-19 Data Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartComponent, {\n      data: countryData,\n      chartType: \"bar\",\n      label: \"Confirmed Cases\",\n      dataKey: \"Confirmed\",\n      backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n      borderColor: \"rgba(255, 99, 132, 1)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WWLW+3QDVh0s1DPNo4YVyRvDU88=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChartComponent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Pie","Line","jsxDEV","_jsxDEV","fetchDataFromEndpoint","endpoint","fetch","then","response","json","ChartComponent","data","chartType","label","dataKey","backgroundColor","borderColor","chartData","labels","map","item","datasets","borderWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","countryData","setCountryData","covidData","setCovidData","groupedData","setGroupedData","fetchData","className","children","_c2","$RefreshReg$"],"sources":["/Users/weetomlee/Desktop/out/General Documentary/UCD Programme Material/Fourth Trimester/COMP47780_Cloud Computing_All Weeks in Autumn_10 Credits/The Project/COMP47780_Cloud_Computing_Healthcare_Big_Data_Project/front_end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\n\nfunction fetchDataFromEndpoint(endpoint) {\n  return fetch(endpoint).then(response => response.json());\n}\n\nfunction ChartComponent({ data, chartType, label, dataKey, backgroundColor, borderColor }) {\n  const chartData = {\n    labels: data.map(item => item['Country/Region']),\n    datasets: [\n      {\n        label: label,\n        data: data.map(item => item[dataKey]),\n        backgroundColor: backgroundColor,\n        borderColor: borderColor,\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  switch (chartType) {\n    case 'bar':\n      return <Bar data={chartData} />;\n    case 'pie':\n      return <Pie data={chartData} />;\n    case 'line':\n      return <Line data={chartData} />;\n    default:\n      return null;\n  }\n}\n\nfunction App() {\n  const [countryData, setCountryData] = useState([]);\n  const [covidData, setCovidData] = useState([]);\n  const [groupedData, setGroupedData] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const countryData = await fetchDataFromEndpoint('/country-wise-latest');\n      setCountryData(countryData);\n\n      const covidData = await fetchDataFromEndpoint('/covid-19-clean-complete');\n      setCovidData(covidData);\n\n      const groupedData = await fetchDataFromEndpoint('/full-grouped');\n      setGroupedData(groupedData);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>COVID-19 Data Visualization</h1>\n      <ChartComponent\n        data={countryData}\n        chartType=\"bar\"\n        label=\"Confirmed Cases\"\n        dataKey=\"Confirmed\"\n        backgroundColor=\"rgba(255, 99, 132, 0.2)\"\n        borderColor=\"rgba(255, 99, 132, 1)\"\n      />\n      {/* Add more ChartComponent with different configurations for covidData and groupedData */}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}